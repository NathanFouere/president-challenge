services:

  reverse-proxy:
    restart: always
    image: "traefik:v3.4"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certs:/certs
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.auth.basicauth.users=president-challenge:$$apr1$$Iseo97Yb$$CFofF8g6Yv6t3.Gj5vkOs0"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.dashboard.president-challenge.com`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=auth"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letencrypt"

  postgres:
    image: postgres:latest
    container_name: database
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - postgres_database:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: server
    container_name: server
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`president-challenge.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.server.entrypoints=websecure"
      - "traefik.http.services.server.loadbalancer.server.port=3333"
      - "traefik.http.routers.server.tls.certresolver=letencrypt"
      - "traefik.http.routers.server.tls=true"

  client:
    build:
      context: .
      dockerfile: Dockerfile
      target: client
    container_name: client
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`president-challenge.com`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls=true"
      - "traefik.http.routers.client.tls.certresolver=letencrypt"
      - "traefik.http.services.client.loadbalancer.server.port=3000"

  minio:
    image: docker.io/bitnami/minio:2022
    volumes:
      - 'minio_data:/data'
    restart: always
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_DEFAULT_BUCKETS=${MINIO_DEFAULT_BUCKETS}
      - MINIO_CONSOLE_ADDRESS=${MINIO_CONSOLE_ADDRESS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.president-challenge.com`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.tls.certresolver=letencrypt"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"

volumes:
  postgres_database:
  minio_data:
    driver: local
  traefik-certs: